{
  "name": "mespeak",
  "version": "2.0.0",
  "description": "Text to speech synthesizer",
  "main": "src/index.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/mespeak.git"
  },
  "keywords": [
    "text",
    "to",
    "speech",
    "synthesizer",
    "speak.js",
    "espeak",
    "say"
  ],
  "author": {
    "name": "Norbert Landsteiner"
  },
  "license": "GPL",
  "bugs": {
    "url": "https://github.com/mikolalysenko/mespeak/issues"
  },
  "gitHead": "24ac326647775bf89e26bc5632722542e39be592",
  "readme": "mespeak\r\n=======\r\nA CommonJS wrapper over Norbert Landsteiner [mespeak](http://www.masswerk.at/mespeak/) text-to-speech library.  Works in browserify.  More\r\n\r\n# Example\r\nHere is a simple example showing how to use mespeak:\r\n\r\n```javascript\r\nvar meSpeak = require(\"mespeak\")\r\n\r\n//Select english/american voice\r\nmeSpeak.loadVoice(require(\"mespeak/voices/en/en-us.json\"))\r\n\r\n//Play a sound\r\nmeSpeak.speak(\"hello world\")\r\n```\r\n\r\nIt also works in node.js too (though audio playback is unsupported):\r\n\r\n```javascript\r\nvar meSpeak = require(\"mespeak\")\r\nmeSpeak.loadVoice(require(\"mespeak/voices/en/en-us.json\"))\r\nprocess.stdout.write(meSpeak.speak(\"hello world\", {rawdata: \"buffer\"}))\r\n```\r\n\r\n# Install\r\n\r\n    npm install mespeak\r\n\r\n\r\n# API\r\nThe API is identical to that on Landsteiner's web page\r\n\r\n```javascript\r\nvar meSpeak = require(\"mespeak\")\r\n```\r\n\r\n### `meSpeak.speak(str[, options])`\r\nSays a string.\r\n\r\n* `str` is a string to say\r\n* `options` is a list of options to pass to the speech synthesizer.  For more info, see [here](http://www.masswerk.at/mespeak/).\r\n\r\nThe `options` argument takes the following parameters:\r\n\r\n* amplitude: How loud the voice will be (default: 100)\r\n* pitch:     The voice pitch (default: 50)\r\n* speed:     The speed at which to talk (words per minute) (default: 175)\r\n* voice:     Which voice to use (default: last voice loaded or defaultVoice, see below)\r\n* wordgap:   Additional gap between words in 10 ms units (default: 0)\r\n* volume:    volume relative to the global volume (number, 0..1, default: 1)\r\n             Note: the relative volume has no effect on the export using option 'rawdata'.\r\n* rawdata:    do not play, return data only.\r\n  The type of the returned data is derived from the value (case-insensitive) of 'rawdata':\r\n  - `buffer`: A node.js buffer containing a wav file\r\n  - 'base64': returns a base64-encoded string.\r\n  - 'mime':   returns a base64-encoded data-url (including the MIME-header).\r\n              (synonyms: 'data-url', 'data-uri', 'dataurl', 'datauri')\r\n  - 'array':  returns a plain Array object with uint 8 bit data.\r\n  - default (any other value): returns the generated wav-file as an ArrayBuffer (8-bit unsigned).\r\n\r\n**Note:** The value of 'rawdata' must evaluate to boolean 'true' in order to be recognized.\r\n\r\n\r\n### `meSpeak.loadConfig(json | url[, callback])`\r\nLoads a configuration for mespeak.  By default uses `mespeak/mespeak_config.json`  There are two forms.\r\n\r\n* `json` Synchronously loads a configuration JSON object.  This can be done using `require(\"filename.json\")`\r\n\r\nThe other option is to load the config asynchronously via http:\r\n\r\n* `url` is the url of the config file\r\n* `callback` is called once the config is loaded\r\n\r\n\r\n### `meSpeak.isConfigLoaded()`\r\nChecks if mespeak is configured\r\n\r\n\r\n### `meSpeak.loadVoice(json | url[, callback] )`\r\nLoads a voice for mespeak.  You can either specify a url and a callback, or a JSON object.  A list of voices are included in the `voices/` directory.  For example, to load an english voice you can do:\r\n\r\n```javascript\r\nmeSpeak.loadVoice(require(\"mespeak/voices/en/en-us.json\"))`\r\n```\r\n\r\nThe other form is the same as in `meSpeak.loadConfig` and takes two arguments:\r\n\r\n* `url` which is the url of the voice to load\r\n* `callback` which is an optional callback-handler. The callback will receive two arguments:\r\n    - a boolean flag for success\r\n    - either the id of the voice, or a reason for errors ('network error', 'data error', 'file error')\r\n\r\n### `meSpeak.setDefaultVoice(str)`\r\nSets the default voice to use.  The default voice is always the the last voice loaded.\r\n\r\n### `meSpeak.isVoiceLoaded()`\r\nChecks if a voice is loaded\r\n\r\n### `meSpeak.getDefaultVoice()`\r\nReturns the default voice.\r\n\r\n### `meSpeak.setVolume(volume)`\r\nSets the volume of playback globally.\r\n\r\n* `volume` is the volume represented as a float\r\n\r\nThis update happens immediately and is applied relatively\r\n\r\n### `meSpeak.getVolume()`\r\nReturns playback volume.\r\n\r\n### `meSpeak.play(stream[, relativeVolume])`\r\nPlays a sound.  You can use this to cache previously generated voices and play them back at run time by setting the\r\n\r\n* `stream` is a sound to play\r\n* `relativeVolume` is the relative loudness of the sound\r\n\r\n### `meSpeak.resetQueue()`\r\nClears playback queue, stops all currently playing sounds.\r\n\r\n### `meSpeak.canPlay()`\r\nChecks if mespeak can play a sound.\r\n\r\n# Credits\r\n(c) 2011-2013 Norbert Landsteiner.  GPL License\r\n\r\nNPM entry currently maintained by Mikola Lysenko\r\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mikolalysenko/mespeak#readme",
  "_id": "mespeak@2.0.0",
  "_shasum": "4e716931517766412b9778c41207f65e644453fd",
  "_from": "eleventigers/mespeak",
  "_resolved": "git://github.com/eleventigers/mespeak.git#24ac326647775bf89e26bc5632722542e39be592"
}
